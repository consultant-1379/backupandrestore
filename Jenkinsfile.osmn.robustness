def bob = './bob/bob'

pipeline {
    agent {
        node {
            label SLAVE
        }
    }
    options {
        timestamps()
        timeout(time: 1, unit: 'HOURS')
    }
    environment {
        API_TOKEN = credentials('hub-arm-rnd-ki-api-token')
        FUNCT = credentials('eadphub-psw')
    }
    stages {
        stage('Prepare bob') {
            steps {
                sh 'git clean -xdff --exclude=.m2 --exclude=settings.xml'
                sh 'git submodule sync'
                sh 'git submodule update --init --recursive'
            }
        }
        stage('Add Helm Repo') {
            steps {
                sh "helm3 repo add int https://arm.sero.gic.ericsson.se/artifactory/proj-adp-eric-ctrl-broint-internal-helm --username ${env.FUNCT_USR} --password ${env.FUNCT_PSW}"
                sh 'helm3 repo update'
                sh 'helm3 pull int/eric-bro-int --devel --untar'
            }
        }
        stage('OSMN Robustness Test') {
            steps {
                withCredentials([
                    string(credentialsId: 'hub-arm-rnd-ki-api-token', variable: 'API_TOKEN'),
                    file(credentialsId: 'hall060', variable: 'KUBECONFIG'),
                    file(credentialsId: 'hub-armdocker-config-json', variable: 'DOCKER_CONFIG'),
                    file(credentialsId: 'sftp-users-yaml', variable: 'USERS_YAML')
                ]) {
                        sh "${bob} -r service/ruleset.osmn.robustness.yaml run-robustness-osmn-tests"
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: 'output.html, pod_logs/*.*, eric-bro-int/Chart.lock', allowEmptyArchive: true
        }
    }
}
