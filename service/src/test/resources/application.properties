spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

#Spring Boot property indicating in which port the rest application will start.
server.port=7001

#Spring Boot property indicating in which port the TLS rest application will start.
server.tls.port=7002

#Port of GRPC server
grpc.server.port=3000

#Path to where backups should be stored.
backup.location=

#Path to where backupManagers should be stored.
backup.managers.location=

#Path to where dummy file should be stored.
backup.dummy.location=

#Time in seconds to wait for a data channel to be ready before sending a message
timeout.data.channel=30

#Maximum Size, in KiB, of fragment chunk to send with each restore data message
restore.fragmentChunk.size=512

#Flag to enable or disable restore notifications. Should be set to true or false.
flag.enable.notification = false
#Kafka configuration for restore notifications
bro.notification.topic = bro-notification
#Max retry attempts in case of failure
kafka.retry.maxAttempts=10
#Max delay between retries
kafka.retry.maxDelay=100
# Time to wait for acknowledgement from broker and time allowed for retriable send failures
spring.kafka.producer.delivery.timeout.ms = 30000
spring.kafka.producer.bootstrap-servers = localhost:9092
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.properties.max.block.ms = 3000

#Max size for backups after cleanup
bro.actions.maxStoredActions = 10000

#Configuration for accessing kubernetes api
kubernetes.namespace.environment.variable = ORCHESTRATOR_NAMESPACE

#Flag to enable or disable agent discovery. Should be set to true or false.
flag.enable.agent.discovery = false
#Configuration for accessing kubernetes for agent discovery
kubernetes.agent.id.label = adpbrlabelkey
kubernetes.agent.scope.annotation = backupType

#Configuration for accessing kubernetes for application product info
kubernetes.app.product.info.configmap.name =

#Configuration for accessing kubernetes for application product matching criteria
kubernetes.app.product.check.configmap.name =

#CM Schema Service configuration
flag.enable.cm=false
cm.mediator.url=http://localhost:5003/cm
cm.mediator.api.suffix=api/v1
cm.mediator.notif.tls.port=7004

#SIPTLS root CA
security.siptls.root.ca.path = src/test/resources/ca.pem

#Bro client CA file, used to sign and validate the client certs
#of any service for which BRO acts as a server (e.g. the REST endpoint)
security.bro.ca.path = src/test/resources/broca.pem

#Cert and key used whenever BRO acts as a server (E.G. REST, PM endpoints)
security.bro.server.key.path = src/test/resources/server1.key
security.bro.server.cert.path = src/test/resources/server1.pem

#Keystore information for REST endpoint keystore
security.bro.keystore.password = changeit
security.bro.keystore.path = src/test/resources/broRestKeystore.p12

#Keystore information for CMM REST endpoint. This is needed for the tests
#as our RestTemplateConfiguration assumes all rest templates are CMM clients,
#which is false, but not a problem as of yet. The SslHealthControllerSystemTest
#relies on a RestTemplate configured as a BRO REST mTLS client, so here the
#"CMM" keystore is configured as a BRO client, to allow those tests to function
#as expected
security.cmm.keystore.password = changeit
security.cmm.keystore.path = src/test/resources/cmmRestEndpointKeystore.p12
security.cmm.client.cert.path = src/test/resources/cmmclientcert.pem
security.cmm.client.key.path = src/test/resources/cmmclientprivkey.pem

security.kafka.keystore.path =
security.kafka.keystore.password =
security.kafka.client.key.path =
security.kafka.client.cert.path =

security.pm.keystore.password = changeit
security.pm.keystore.path = src/test/resources/pmKeystore.p12
security.pm.client.ca.path = src/test/resources/ca.pem

# Simply use CMM key material to force keystore construction, in order to get test coverage
security.logtransformer.keystore.path = src/test/resources/ltKeystore.p12
security.logtransformer.keystore.password = changeit
security.logtransformer.client.key.path = src/test/resources/cmmclientprivkey.pem
security.logtransformer.client.cert.path = src/test/resources/cmmclientcert.pem
security.logtransformer.client.alias = LT

global.tls = false
flag.global.security = false
restActions.tlsRequired =

grpc.verifyClientCertificateEnforced = optional

bro.service.name = localhost
bro.product.name = eric-ctrl-bro
bro.product.number = APR 201 40/3
bro.product.revision = R3A
bro.productMatchType = ANY
bro.selectedMatchType = PRODUCT
bro.semVerMatchType = ANY
bro.productLowestAllowedVersion = 0.0.0

#Allow spring to override bean
spring.main.allow-bean-definition-overriding=true

# Timeout for SFTP channel in milliseconds.
sftpTimeout = 5000

healthStatus.folder = .

#Expose Prometheus endpoint
management.endpoints.web.exposure.include=metrics,prometheus

sftp.retry.attempts = 2
sftp.retry.delayMs = 30
sftp.inactivity.seconds = 0

spring.main.allow-circular-references = true
