ESAPI.Logger=org.owasp.esapi.logging.java.JavaLogFactory

# Set the application name if these logs are combined with other applications
Logger.ApplicationName=eric-ctrl-bro
# If you use an HTML log viewer that does not properly HTML escape log data, you can set LogEncodingRequired to true
Logger.LogEncodingRequired=false
# Determines whether ESAPI should log the application name. This might be clutter in some single-server/single-app environments.
Logger.LogApplicationName=false
# Determines whether ESAPI should log the server IP and port. This might be clutter in some single-server environments.
Logger.LogServerIP=false
# Determines whether ESAPI should log the user info.
Logger.UserInfo=false
# Determines whether ESAPI should log the session id and client IP.
Logger.ClientInfo=false


#BackupName reg ex allows only alphanumeric, special characters \_\+\-\=\.\: and white spaces
Validator.BackupName=^[\\w+=:. -]{1,255}$
Validator.eventId=^[\\w+=:. -]{1,255}$

#SFTP_URI for sftp://user@<ipv4|ipv6|dns>:<port>/<location>, lifted all the URL validation from ESAPI validation.props.
#Does not validate IP address just allows the general form that can appear.
#original ^sftp:\/\/[-a-zA-Z0-9+&@#\/_!:.\\[\\]]+$
Validator.SFTP_URI=^sftp:\\/\\/[0-9a-zA-Z_\\-]+@([\\[:*0-9A-Za-z.\\]]+|([-.\\w]*[0-9a-zA-Z])*)(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\:\\'\\/\\\\\\+=&;%\$#_]*)?$
Validator.HTTP_URI=^http:\\/\\/([\\[:*0-9A-Za-z.\\]]+|([-.\\w]*[0-9a-zA-Z])*)(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\:\\'\\/\\\\\\+=&;%\$#_]*)?$

# Calendar Events Validation
Validator.CALENDAR_TIME=^(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$

# This generic alphanumeric validator checks if the string contains at least one alphanumeric character,
# an underscore or a hyphen.
Validator.ALPHANUMERIC=^[\\w-]{1,255}$

# This validates the host name according to RFC 1034 Domain Names - Concepts and Facilities in November 1987
# Example Syntax: <label-node>.<label-node>
# A host name can have one or more label nodes separated by a dot.
# Every label node should be 63 characters or less, and should only contain alphanumeric characters and hyphen.
# A label node cannot start or end with a hyphen.
Validator.HOSTNAME=^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])(\\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]))*$

# This remote path validator allows alphanumeric characters and special characters (-.?:'/\+=&;%$#_,) excluding the enclosing parentheses.
Validator.REMOTEPATH=^[a-zA-Z0-9\\-\\.\\?\\,\\:\\'\\/+=&;%\$#_]+$

# Checks if the private key is in OpenSSL PEM format
# Example:
# -----BEGIN [ENCODING] PRIVATE KEY-----
# <the multi-line encoded key>
# -----END [ENCODING] PRIVATE KEY-----
Validator.PEMPRIVATEKEY=^(-----BEGIN (RSA|DSA|EC|OPENSSH) PRIVATE KEY-----(\r|\n|\r\n))(.*(\r|\n|\r\n))*(-----END (RSA|DSA|EC|OPENSSH) PRIVATE KEY-----(\r|\n|\r\n)?)$

# If the startTime or stopTime is specified in the calendar event request,
# the timezone is optional. If the timezone is not specified, BRO will use the System's default timezone.
Validator.CALENDAR_DATETIME=^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[\\+\\-]\\d{2}:\\d{2})?$